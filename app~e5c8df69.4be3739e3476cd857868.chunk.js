(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{"resources/elements/factoryBlocks/busView.html":function(e,n){e.exports='<template>\n  <scope-var var.bind="view.set({type: \'scope\', which: \'buffer\', what: IgorJs.getObjId(view.$scope.showingBlock.processors.central) })"></scope-var>\n  <section\n    id="viewBusLine"\n    click.capture="CCC.provide($event, \'at\', \'factoryBus\', view.$scope.showingBlock)"\n    mouseenter2.trigger = "view.unset({which: \'tooltip\'})"\n    class="container">\n    <div class="row">\n      <div class="col">\n        Size: ${view.$scope.showingBlock.size}\n      </div>\n      <div class="col">\n        <h5 class="bus_header">\n          ${view.$scope.showingBlock.name}-\n          <icon-base\n            click.delegate="CCC.issue(\'factoryBus.selectSubIcon\', {}, $event)"\n            item.bind="view.$scope.showingBlock.subIcon"\n          ></icon-base></h5>\n      </div>\n      <div class="col text-end">\n        Complexity: ${view.$scope.showingBlock.complexity}\n      </div>\n    </div>\n    <div class="row">\n      <div class="col busLine_tut_inProgress">\n        <div class="row">\n          <div\n            class="col"\n            click.capture="CCC.provide($event, \'which\', \'buffer\', view.$scope.showingBlock.processors.central)"\n          >\n            <icon-base\n              item="iron-chest"\n              count.bind="view.$scope.buffer.upgrades.bufferSize.count & signal:\'generalUpdate\'"\n              mouseenter.trigger="view.set({type: \'scope\', which: \'tooltip\', what: CCC.utilityFn(\'facBlock.__tooltips\', view.$scope.showingBlock, {which: \'bufferUpgrade\', buffer: view.$scope.buffer}) })"\n              click.delegate="CCC.issue(\n                \'entity.bufferUpgrade\',\n                {\'type.string\': \'buffer\'\n                ,\'cost.stacks\': CCC.utilityFn(\'facBlock.__tooltips\', view.$scope.showingBlock, {which: \'bufferUpgrade\', buffer: view.$scope.buffer}).data\n                }, $event)"\n            ></icon-base>\n            Max stackSize: ${view.$scope.buffer.stackSize & signal:\'generalUpdate\'}\n          </div>\n          <span\n          class="col"\n          show.bind="view.$scope.showingBlock.clogged"\n          click.delegate="CCC.issue(\'factoryBus.clearClog\', {}, $event)"\n          >Clear Clog</span>\n        </div>\n        <div class="row">\n          <icon-base\n            repeat.for="item of view.$scope.buffer.items"\n            if.bind="item.count"\n            item.bind="item.name"\n            count.bind="item.count"\n          ></icon-base>\n          <span>\n            Next stack at: ${Math.ceil(view.$scope.showingBlock.size/50)*50}\n          </span>\n        </div>\n      </div>\n    </div>\n    <hr class="bus"/>\n    <div class="row">\n      <div class="col">\n        <div>\n          <h5>Sources</h5>\n          <span\n            class="progressBarBase busLine_expandProcessing"\n            css="border-image-source: linear-gradient(to right, green 0%, green ${view.$scope.showingBlock.processors.source.xferTimer/view.$scope.showingBlock.processors.source.xferTicks*100-10}%, red ${view.$scope.showingBlock.processors.source.xferTimer/view.$scope.showingBlock.processors.source.xferTicks*100+10}%, red )"\n          >Acquisition</span>\n          Qty: ${view.$scope.showingBlock.processors.source.xferQty}\n          <span\n            click.delegate="CCC.issue(\'factoryBus.expandProcessing\', {\'dir.string\':\'source\'}, $event)"\n            mouseenter.trigger="view.set({type: \'scope\', which: \'tooltip\', what: CCC.utilityFn(\'busLine_Costs\', view.$scope.showingBlock.$_id, {which: \'input_processing\'}) })"\n            class="busLine_expandProcessing fas fa-plus-square fa_icon_sm"\n          ></span>\n        </div>\n        <span id="busLine_sources">\n          Max Sources: ${view.$scope.showingBlock.connections.maxSources}\n          <span \n            id="busLine_sources_add"\n            mouseenter.trigger="view.set({type: \'scope\', which: \'tooltip\', what: CCC.utilityFn(\'busLine_Costs\', view.$scope.showingBlock.$_id, {which: \'expand_input_sources\'}) })"\n            click.delegate="CCC.issue(\'factoryBus.expandBus\', {\'dir.string\':\'source\'}, $event)"\n            class="fas fa-plus-square fa_icon_sm busLineTut_addAccessPoint"\n          ></span>\n        </span><br>\n        <div repeat.for="source of view.$scope.showingBlock.connections.sources">\n          <span\n            class="fas fa-sign-in-alt fa_icon_sm"\n            click.delegate="showItem = {item: source, view:\'viewFacBlock\'}"\n          ></span>\n          ${IgorJs.getObjId(source).name}\n          <icon-base\n            repeat.for="item of IgorJs.getObjId(source, \'buffers.out\').items & signal:\'generalUpdate\'"\n            item.bind="item.name"\n            count.bind="item.count"\n          ></icon-base>\n          <span if.bind="view.$scope.showingBlock.processors.source.xferTarget==$index">&lt;--</span>\n        </div>\n      </div>\n      <div class="col">\n        <div>\n          <h5 class="text-end">Drains</h5>\n          <span\n          class="progressBarBase busLine_expandProcessing"\n          css="border-image-source: linear-gradient(to right, green 0%, green ${view.$scope.showingBlock.processors.drain.xferTimer/view.$scope.showingBlock.processors.drain.xferTicks*100-10}%, red ${view.$scope.showingBlock.processors.drain.xferTimer/view.$scope.showingBlock.processors.drain.xferTicks*100+10}%, red )"\n          >Deposition</span>\n          Qty: ${view.$scope.showingBlock.processors.drain.xferQty}\n          <span\n            class="fas fa-plus-square fa_icon_sm busLine_expandProcessing"\n            click.delegate="CCC.issue(\'factoryBus.expandProcessing\', {\'dir.string\':\'drain\'}, $event)"\n            mouseenter.trigger="view.set({type: \'scope\', which: \'tooltip\', what: CCC.utilityFn(\'busLine_Costs\', view.$scope.showingBlock.$_id, {which: \'output_processing\'}) })"\n          ></span>\n        </div>\n        <span id="busLine_drains">\n          Max Drains: ${view.$scope.showingBlock.connections.maxDrains}\n          <span id="busLine_drains_add"\n            click.delegate="CCC.issue(\'factoryBus.expandBus\', {\'dir.string\':\'drain\'}, $event)"\n            mouseenter.trigger="view.set({type: \'scope\', which: \'tooltip\', what: CCC.utilityFn(\'busLine_Costs\', view.$scope.showingBlock.$_id, {which: \'expand_output_drains\'}) })"\n            class="fas fa-plus-square fa_icon_sm busLineTut_addAccessPoint"\n          ></span>\n        </span>\n        <br>\n        <div repeat.for="drain of view.$scope.showingBlock.connections.drains">\n          <span if.bind="view.$scope.showingBlock.processors.drain.xferTarget==$index">&gt;--</span>\n          <span if.bind="view.$scope.showingBlock.processors.drain.xferTarget!=$index">&nbsp;&nbsp;&nbsp;</span>\n          <icon-base\n            repeat.for="item of IgorJs.getObjId(drain, \'buffers.in\').items & signal:\'generalUpdate\'"\n            item.bind="item.name"\n            count.bind="item.count"\n          ></icon-base>\n          ${IgorJs.getObjId(drain).name}\n          <span\n            class="fas fa-sign-out-alt fa_icon_sm"\n            click.delegate="showItem = {item: drain, view:\'viewFacBlock\'}"\n          ></span>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n'},"resources/elements/factoryBlocks/mainView.html":function(e,n){e.exports='<template>\n<scope-var var.bind="view.set({type: \'scope\', which: \'inBuffer\', what: IgorJs.getObjId(view.$scope.showingBlock.buffers.in) })"></scope-var>\n<scope-var var.bind="view.set({type: \'scope\', which: \'outBuffer\', what: IgorJs.getObjId(view.$scope.showingBlock.buffers.out) })"></scope-var>\n<section id="viewFacBlock" click.capture="CCC.provide($event, \'at\', \'factoryBlock\', view.$scope.showingBlock )" class="container">\n  <div class=\'row\'>\n    <span class="col">Land Size : ${view.$scope.showingBlock.size}</span>\n    <span class="col">\n      <h5>\n        ${view.$scope.showingBlock.name}-\n        <icon-base\n          class="row ib_sm"\n          click.delegate="CCC.issue(\'factoryBlock.selectSubIcon\', {}, $event)"\n          item.bind="view.$scope.showingBlock.subIcon"\n        ></icon-base></h5>\n    </span>\n\n    <span class="col">Complexity: ${view.$scope.showingBlock.complexity}</span>\n  </div>\n  <div class="row bufferRow">\n    <div\n      if.bind="view.$scope.showingBlock.buffers.in"\n      click.capture="CCC.provide($event, \'which\', \'buffer\', view.$scope.showingBlock.buffers.in)"\n      class="col">\n      <div class="row">\n        <div\n          class="col"\n          repeat.for="sourceIdx of view.$scope.showingBlock.connections.maxSources"\n        >\n          <span\n            class="fas fa-sign-out-alt fa_icon_sm"\n            click.delegate="showItem = {item: IgorJs.getObjId(view.$scope.showingBlock.connections.sources[sourceIdx]), view:\'viewFacBlock\'}"\n          ></span>:\n          <span\n            class="facBlockIn connection"\n            click.delegate="CCC.issue(\'factoryBus.connectTo\', \n                {\n                    \'factoryBus.dialog\': {showSpecials: false, showDisconnect: view.$scope.showingBlock.connections.sources[sourceIdx]},\n                    \'dir.string\': \'input\',\n                    \'connectTo.block\': view.$scope.showingBlock.$_id,\n                    \'current.bus\': view.$scope.showingBlock.connections.sources[sourceIdx] || -1\n                }, $event)"\n          >\n            ${IgorJs.getObjId(view.$scope.showingBlock.connections.sources[sourceIdx]).name || "none" & signal:"generalUpdate"}\n            <span class="fas fa-edit fa_icon_sm"></span>\n          </span>\n        </div>\n      </div>\n      <div class="row">\n        <icon-base\n          repeat.for="item of IgorJs.getObjId(view.$scope.showingBlock.buffers.in).items & signal:\'generalUpdate\'"\n          item.bind="item"\n          count.bind="item.count"\n          click.delegate="CCC.issue(\'entity.bufferFill\', {\'item.name\': item.name, \'at.entity\': \'temp_null\'}, $event)"\n        ></icon-base>\n      </div>\n      <div class="row">\n        <span\n          click.capture="CCC.provide($event, \'which\', \'buffer\', view.$scope.showingBlock.buffers.in)"\n        >\n          <icon-base\n            item="iron-chest"\n            count.bind="IgorJs.getObjId(view.$scope.showingBlock.buffers.in).upgrades.bufferSize.count & signal:\'generalUpdate\'"\n            class="${view.$scope.inBuffer.upgrades.bufferSize.count>view.$scope.inBuffer.upgrades.maxBuffers && \'countFull\'}"\n            click.delegate="CCC.issue(\n                          \'entity.bufferUpgrade\',\n                          {\'type.string\': \'buffer\'\n                          ,\'cost.stacks\': CCC.utilityFn(\'facBlock.__tooltips\', view.$scope.showingBlock, {which: \'bufferUpgrade\', buffer: view.$scope.showingBlock.buffers.in}).data\n                          }, $event)"\n            mouseenter.trigger="view.set({type: \'scope\', which: \'tooltip\', what: CCC.utilityFn(\'facBlock.__tooltips\', view.$scope.showingBlock, {which: \'bufferUpgrade\', buffer: view.$scope.showingBlock.buffers.in}) })"\n          ></icon-base>\n          Max Size: ${IgorJs.getObjId(view.$scope.showingBlock.buffers.in).stackSize & signal:\'generalUpdate\'}\n        </span>\n      </div>\n    </div>\n    <div\n      if.bind="view.$scope.showingBlock.buffers.out"\n      click.capture="CCC.provide($event, \'which\', \'buffer\', view.$scope.showingBlock.buffers.out)"\n      class="col">\n      <div class="row">\n        <div\n          class="col"\n          repeat.for="drainIdx of view.$scope.showingBlock.connections.maxDrains"\n        >\n          <span\n            class="fas fa-sign-in-alt fa_icon_sm"\n            click.delegate="showItem = {item: IgorJs.getObjId(view.$scope.showingBlock.connections.drains[drainIdx]), view:\'viewFacBlock\'}"\n          ></span>:\n          <span\n            class="facBlockOut connection"\n            click.delegate="CCC.issue(\'factoryBus.connectTo\',\n                    {\n                      \'factoryBus.dialog\': {showSpecials: true, showDisconnect: view.$scope.showingBlock.connections.drains[drainIdx]},\n                      \'dir.string\': \'output\',\n                      \'connectTo.block\': view.$scope.showingBlock.$_id,\n                      \'current.bus\': view.$scope.showingBlock.connections.drains[drainIdx] || -1\n                    }, $event)"\n          >\n            ${IgorJs.getObjId(view.$scope.showingBlock.connections.drains[drainIdx]).name || "none" & signal:\'generalUpdate\'}\n            <span class="fas fa-edit fa_icon_sm"></span>\n          </span>\n        </div>\n      </div>\n      <div class="row">\n        <icon-base \n          repeat.for="item of IgorJs.getObjId(view.$scope.showingBlock.buffers.out).items & signal:\'generalUpdate\'"\n          if.bind="item" \n          item.bind="item" \n          count.bind="item.count"\n          click.delegate="CCC.issue(\'entity.bufferCollect\', {\'item.name\': item.name, \'at.entity\': \'temp_null\'}, $event)"\n        ></icon-base>\n      </div>\n      <div class="row">\n        <span\n          click.capture="CCC.provide($event, \'which\', \'buffer\', view.$scope.showingBlock.buffers.out)"\n        >\n          <icon-base\n            item="iron-chest"\n            count.bind="view.$scope.outBuffer.upgrades.bufferSize.count & signal:\'generalUpdate\'"\n            click.delegate="CCC.issue(\n                          \'entity.bufferUpgrade\',\n                          {\'type.string\': \'buffer\'\n                          ,\'cost.stacks\': CCC.utilityFn(\'facBlock.__tooltips\', view.$scope.showingBlock, {which: \'bufferUpgrade\', buffer: view.$scope.showingBlock.buffers.out}).data\n                          }, $event)"\n            mouseenter.trigger="view.set({type: \'scope\', which: \'tooltip\', what: CCC.utilityFn(\'facBlock.__tooltips\', view.$scope.showingBlock, {which: \'bufferUpgrade\', buffer: view.$scope.showingBlock.buffers.out}) })"\n          ></icon-base>\n          Max Size: ${view.$scope.outBuffer.stackSize & signal:\'generalUpdate\'}\n        </span>\n      </div>\n    </div>\n  </div>\n  <div class="row buffersEdit">\n    <div if.bind="$scope.bufferEdit">\n      ${$scope.bufferEdit.$_id}\n    </div>\n  </div>\n  <div\n    class="productionLines row"\n    repeat.for="line of view.Fn.sort(IgorJs.arrayFromIds(view.$scope.showingBlock.factoryLines)) & signal:\'generalUpdate\'"\n    click.capture="CCC.provide($event, \'at\', \'factoryLine\', line)"\n    >\n    <span\n      if.bind="line.buildingType"\n      class="setRecipe col"\n      click.delegate="CCC.issue(\'factoryLine.setRecipe\', {$_recipeXlist: view.Fn.recipeFilter(line.crafting_categories, true)}, $event)"\n      >\n      Recipe: \n        <icon-base\n          if.bind="line.recipe"\n          item.bind="line.recipe"\n          class="progressBarBase"\n          stalled.bind="line.stalled"\n          progress.bind="(line.processing_time-line.processing_ticks)/line.processing_time*100"\n          ></icon-base>\n        <span if.bind="!line.recipe">None</span>\n    </span>\n    <span class="col">\n      <span\n        if.bind="!line.buildingType"\n        todo="building selection dialog needs to be more restricted"\n        click.delegate="CCC.issue(\'factoryLine.setBuilding\', null, $event)"\n        class="setBuildingType"\n      >Set Building Type...</span>\n      <span\n        if.bind="line.buildingType"\n        click.delegate="CCC.issue(\'factoryLine.addBuilding\', null, $event)"\n      >\n        <icon-base item.bind="line.buildingType"></icon-base>\n        : ${line.built}\n      </span>\n    </span>\n    <span\n      class="col"\n      click.delegate="CCC.issue(\'factoryLine.prep\', null, $event)"\n      mouseenter.trigger="view.set({type: \'scope\', which: \'tooltip\', what: CCC.utilityFn(\'factoryLine.toolTips\', line.$_id, {which: \'foundation\'}) })"\n      if.bind="line.buildingType"\n    >\n      Prepped spaces: ${line.prepped}\n      <span\n        class="fas fa-plus-square fa_icon_sm"\n      ></span>\n    </span>\n    <span class="col">\n      <span\n        class="fas fa-sort-up"\n        click.delegate="CCC.issue(\'object.move\', {\'which.obj\': line, \'list.objs\': view.$scope.showingBlock.factoryLines, \'dir.number\':-1}, $event)"\n        show.bind="!$first"\n      ></span>\n      <span\n        class="fas fa-trash-alt"\n        click.delegate="CCC.issue(\'object.delete\', {\'which.obj\': line, \'list.objs\': view.$scope.showingBlock.factoryLines}, $event)"\n        show.bind="!($first && $last)"\n      ></span>\n      <span\n        class="fas fa-sort-down"\n        click.delegate="CCC.issue(\'object.move\', {\'which.obj\': line, \'list.objs\': view.$scope.showingBlock.factoryLines, \'dir.number\':1}, $event)"\n        show.bind="!$last"\n      ></span>\n    </span>\n  </div>\n  <div note="add new line to factory block" class="row">\n    <span\n      mouseenter.trigger="CCC.utilityFn(\'facBlock.__tooltips\', view.$scope.showingBlock.$_id, {which: \'addLine\'})"\n      click.delegate="CCC.issue(\'factoryBlock.addLine\', null, $event)"\n    >Add Line</span>\n  </div>\n  <div\n    show.bind="IgorJs.getObjId(view.$scope.showingBlock.buffers.internal).items"\n    click.capture="CCC.provide($event, \'which\', \'buffer\', view.$scope.showingBlock.buffers.internal)"\n    class="row w-100">\n      <span class="fab fa-creative-commons-sa text-center w-100"></span><br>\n      <div repeat.for="item of IgorJs.getObjId(view.$scope.showingBlock.buffers.internal).items & signal:\'generalUpdate\'" class="col interItem">\n        <icon-base if.bind="item" item.bind="item" count.bind="item.count"></icon-base>\n        <span\n          class="fas fa-level-up-alt fa-rotate-90"\n          if.bind="item.name"\n          click.delegate="CCC.issue(\'entity.bufferFill\', {\'item.name\': item.name, \'at.entity\': \'temp_null\'}, $event)"\n        ></span>\n        <span\n          class="fas fa-level-down-alt"\n          if.bind="item.name"\n          click.delegate="CCC.issue(\'entity.bufferCollect\', {\'item.name\': item.name, \'at.entity\': \'temp_null\', }, $event)"\n        ></span>\n      </div>\n  </div>\n</section>\n</template>\n'},"resources/elements/factoryBlocks/resView.html":function(e,n){e.exports='<template>\n    <section\n        id="viewResBlock"\n        click.capture="CCC.provide($event, \'at\', \'ResourceBlock\', view.$scope.showingBlock)"\n        class="container"\n    >\n        <div class="row">\n            <span class="col">Space Used: ${view.$scope.showingBlock.spaceUsed}</span>\n            <h3 class="col">${view.$scope.showingBlock.name}</h3>\n            <span class="col">Complexity: ${view.$scope.showingBlock.complexity}</span>\n        </div>\n        <div class="row">\n            <div class="col">\n                <span\n                    id="resBlock_miners"\n                    click.delegate="CCC.issue(\'resBlock.buildMine\', {}, $event)"\n                    mouseenter.trigger="view.set({type: \'scope\', which: \'tooltip\', what: CCC.utilityFn(\'resBlock.__minerCost\', view.$scope.showingBlock.$_id) })"\n                >Miners: ${view.$scope.showingBlock.built}</span>\n                <br>\n                <span\n                    id="resBlock_foundation"\n                    click.delegate="CCC.issue(\'resBlock.prepSpace\', {}, $event)"\n                    mouseenter.trigger="view.set({type: \'scope\', which: \'tooltip\', what: CCC.utilityFn(\'resBlock.__foundationCost\', view.$scope.showingBlock.$_id) })"\n                >Foundations: ${view.$scope.showingBlock.prepped}</span>\n            </div>\n            <div class="col">\n                <icon-base\n                    repeat.for="item of IgorJs.getObjId(view.$scope.showingBlock.buffers.out).items & signal:\'bufferUpdate\'"\n                    item.bind="item"\n                    if.bind="view.$scope.showingBlock.patchProperties.resource"\n                    count.bind="item.count"\n                    max_fill.bind="IgorJs.getObjId(view.$scope.showingBlock.buffers.out).stackSize"\n                    stalled.bind="view.$scope.showingBlock.stalled"\n                    progress.bind="(view.$scope.showingBlock.patchProperties.mining_time - view.$scope.showingBlock.mining_ticks)/view.$scope.showingBlock.patchProperties.mining_time*100"\n                    click.delegate="CCC.issue(\'entity.bufferCollect\', {\'which.buffer\': view.$scope.showingBlock.buffers.out, \'at.entity\': \'temp_null\', \'item.name\':item.name}, $event)"\n                ></icon-base>\n                <p\n                    class="resBlock_setResource"\n                    click.delegate="CCC.issue(\'resBlock.setResource\', {\'$_resourceXlist\': view.Fn.objectValues(dataSet.resource)}, $event )"\n                >Change Resource</p>\n            </div>\n            <div class="col">\n                <div class="resBlock connection">\n                    <span\n                        class="fas fa-sign-out-alt fa_icon_sm"\n                        click.delegate="showItem = {item: IgorJs.getObjId(view.$scope.showingBlock.connections.drains[0]), view:\'viewFacBlock\'}"\n                    ></span>\n                    <span\n                        click.delegate="CCC.issue(\'factoryBus.connectTo\', \n                            {   \'dir.string\': \'output\',\n                                \'factoryBus.dialog\': {showSpecials: false},\n                                \'connectTo.block\' : view.$scope.showingBlock.$_id,\n                                \'current.bus\': view.$scope.showingBlock.connections.drains[0] || -1\n                            }, $event)"\n                    >\n                        ${IgorJs.getObjId(view.$scope.showingBlock.connections.drains[0]).name || "none" & signal:\'generalUpdate\'}\n                        <span class="fas fa-edit fa_icon_sm"></span>\n                    </span>\n                </div>\n            </div>\n        </div>\n        </section>\n</template>'},"resources/elements/factoryBlocks/techBlock.html":function(e,n){e.exports='<template>\n    <section\n        click.capture="CCC.provide($event, \'at\', \'techBlock\', view.$scope.showingBlock)"\n        mouseenter2.trigger = "tooltip = null"\n        class="container"\n    >\n        <div class="row">\n            <span class="col">Space Used: ${view.$scope.showingBlock.spaceUsed}</span>\n            <h5 class="col">${view.$scope.showingBlock.name}</h5>\n            <span class="col">Complexity: ${view.$scope.showingBlock.complexity}</span>\n        </div>\n        <div class="row">\n            <div\n                class="col ${view.$scope.showingBlock.research_time && \'progressBarBase\'} ${view.$scope.showingBlock.stalled && \'stalled\'}"\n                css="border-image-source: linear-gradient(to left, red ${view.$scope.showingBlock.research_ticks/view.$scope.showingBlock.research_time*100-5}%, green ${view.$scope.showingBlock.research_ticks/view.$scope.showingBlock.research_time*100+10}%)"\n            >\n                <span\n                    id="techBlock_labs"\n                    click.delegate="CCC.issue(\'techBlock.buildLab\', {}, $event)"\n                    mouseenter.trigger="view.set({type: \'scope\', which: \'tooltip\', what: CCC.utilityFn(\'techBlock.toolTips\', view.$scope.showingBlock.$_id, {which: \'buildLab\'}) })"\n                >Labs: ${view.$scope.showingBlock.built}</span><br>\n                <span\n                    id="techBlock_foundation"\n                    click.delegate="CCC.issue(\'techBlock.prepSpace\', {}, $event)"\n                    mouseenter.trigger="view.set({type: \'scope\', which: \'tooltip\', what: CCC.utilityFn(\'techBlock.toolTips\', view.$scope.showingBlock.$_id, {which: \'foundation\'}) })"\n                >Foundations: ${view.$scope.showingBlock.prepped}</span><br>\n            </div>\n            <div class="col">\n                <div class="row">\n                    <div class="techBlock connection">\n                        <span\n                            class="fas fa-sign-in-alt fa_icon_sm "\n                            click.delegate="showItem = {item: IgorJs.getObjId(view.$scope.showingBlock.connections.sources[0]), view:\'viewFacBlock\'}"\n                        ></span>\n                        <span\n                            click.delegate="CCC.issue(\'factoryBus.connectTo\',\n                            { \'dir.string\': \'input\',\n                                \'factoryBus.dialog\': {showSpecials: false},\n                                \'connectTo.block\': view.$scope.showingBlock.$_id,\n                                \'current.bus\': view.$scope.showingBlock.connections.sources[0] || -1\n                            })"\n                        >\n                            ${IgorJs.getObjId(view.$scope.showingBlock.connections.sources[0]).name || "none" & signal:\'generalUpdate\'}\n                            <span class="fas fa-edit fa_icon_sm"></span>\n                        </span>\n                    </div>\n                </div>\n                <div class="row">\n                    <icon-base\n                        repeat.for="each of IgorJs.getObjId(view.$scope.showingBlock.buffers.in).items"\n                        item.bind="each.name"\n                        count.bind="each.count"\n                        click.delegate="CCC.issue(\'entity.bufferFill\', {\'which.buffer\': view.$scope.showingBlock.buffers.in, \'item.name\': each.name}, $event)"\n                    ></icon-base>\n                </div>\n            </div>\n            <div class="col">\n                <span>Tech Branch: ${view.$scope.showingBlock.techTreeClass}</span><br>\n                <span click.delegate="view.ctrl.main=\'research\'">\n                    ${globals.research.progressing.name || "No Research" & signal:\'generalUpdate\'}\n                    <span class="fas fa-sign-in-alt fa_icon_sm"></span>\n                </span><br>\n                <span show.bind="globals.research.progressing">\n                     ${globals.research[globals.research.progressing.name].completeUnits}\n                    /${globals.research.progressing.cost.count}\n                </span>\n            </div>\n        </div>\n    </section>\n</template>'}}]);
//# sourceMappingURL=app~e5c8df69.4be3739e3476cd857868.bundle.map