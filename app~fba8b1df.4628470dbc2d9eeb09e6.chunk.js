(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{"3Qvj":function(e,t,o){"use strict";o.d(t,"a",(function(){return l}));var n=o("aurelia-dialog"),c=o("resources/dialogs/SelectBus"),i=o("resources/dialogs/SelectRecipe"),s=o("resources/dialogs/SelectX"),l=function(){function e(e){this.ds=e,this.modals={SelectBus:c.SelectBus,SelectRecipe:i.SelectRecipe,SelectX:s.SelectX}}return e.prototype.open=function(e,t,o){var n=this;return void 0===o&&(o=!1),new Promise((function(c,i){n.ds.open({viewModel:n.modals[e],model:t,lock:o}).whenClosed((function(e){return c(e.output)}))}))},e}();l.inject=[n.DialogService]},"resources/attributes/loading":function(e,t,o){"use strict";var n;o.r(t),o.d(t,"LoadingAnimCustomAttribute",(function(){return c}));var c=function(){function e(e){this.element=e,this.inner=e.cloneNode(!0)}return e.prototype.valueChanged=function(e){e&&this.element.replaceWith(this.inner),e||this.element.replaceWith(n)},e}();c.inject=[Element],c.setLoadingElem=function(e){n=document.querySelector(e).cloneNode(!0)}},"resources/components/tabPopout":function(e,t,o){"use strict";o.r(t),o.d(t,"TabPopout",(function(){return n}));var n=function(){this.id="tabPopout"+Math.ceil(1e3*Math.random())}},"resources/components/tabPopout.html":function(e,t,o){e.exports='<template>\n  <require from="./tabPopout.scss"></require>\n  <input type="checkbox" class="tab_toggle" id.one-time="id">\n  <label for.one-time="id">\n    <slot name="tab">\n      Tab Name Goes Here\n    </slot>\n  </label>\n  <slot name="content">\n    Random Content!\n  </slot>\n</template>\n'},"resources/components/tabPopout.scss":function(e,t,o){(t=o("JPst")(!1)).push([e.i,"tab-popout{position:fixed}tab-popout>.tab_toggle{display:none}tab-popout>label{background-color:hsla(0,0%,49.8%,.5);text-align:center;margin:0;position:absolute;display:inline-block;width:16vh}tab-popout>label .tabOnly{display:inline}tab-popout [slot=content]{display:none}tab-popout>input[type=checkbox]:checked~[slot=content]{display:block;background-color:#2f4f4f;border:1px dashed #000;border-radius:8px}tab-popout>input[type=checkbox]:checked~[slot=content]>*{display:inline-block}tab-popout>input[type=checkbox]:checked~label .tabOnly{display:none}tab-popout.tab_bottom_left{bottom:0;left:0}tab-popout.tab_bottom_left>label{transform:translateX(-100%) rotate(90deg);transform-origin:bottom right;bottom:1vh;left:min(1vw,10px)}tab-popout.tab_bottom_left>.tab_toggle:checked~label{left:70px;padding:2px 75%;transform:translate(-100%,-150%) rotate(90deg)}tab-popout.tab_bottom_right{bottom:0;right:0}tab-popout.tab_bottom_right>label{transform:translateX(100%) rotate(-90deg);transform-origin:bottom left;bottom:1vh;right:min(1vw,10px)}tab-popout.tab_bottom_right>.tab_toggle:checked~label{right:70px;padding:2px 75%;transform:translate(100%,-150%) rotate(-90deg);bottom:unst}",""]),e.exports=t},"resources/dialogs/SelectBus":function(e,t,o){"use strict";o.r(t),o.d(t,"SelectBus",(function(){return c}));var n=o("aurelia-dialog"),c=function(){function e(e){this.controller=e}var t=e.prototype;return t.activate=function(e){var t;this.options=(null==(t=e.base)?void 0:t.facBlocks)||e.buses,this.selected=null},t.selectedChanged=function(e){console.log(e)},t.complete=function(){this.controller.ok({selected:this.selected})},e}();c.inject=[n.DialogController]},"resources/dialogs/SelectBus.html":function(e,t){e.exports='<template>\n  <ux-dialog>\n    <ux-dialog-header>Select Bus</ux-dialog-header>\n    <ux-dialog-body>\n      <div repeat.for="block of options" click.trigger="selected = (block == selected && undefined ) || block">\n        <span class.bind="block==selected && \'button\'">\n        ${block.name+":"+block.type}\n        </span>\n      </div>\n    </ux-dialog-body>\n    <ux-dialog-footer>\n      <button click.trigger="complete()">Close</button>\n    </ux-dialog-footer>\n  </ux-dialog>\n</template>\n'},"resources/dialogs/SelectRecipe":function(e,t,o){"use strict";o.r(t),o.d(t,"SelectRecipe",(function(){return i}));var n=o("aurelia-dialog"),c=o("+Aae"),i=function(){function e(e,t){this.selected=null,this.controller=e,this.mgrs=t}var t=e.prototype;return t.activate=function(e){var t,o=this;this.model=e,Object.entries(e.tags).forEach((function(e){var n=e[0],c=e[1];t=o.mgrs.rec.recipesByTags(n,c,t)})),this.recList=t},t.select=function(e){this.selected=e==this.selected?null:e},t.complete=function(){this.controller.ok({recipe:this.selected})},e}();i.inject=[n.DialogController,c.a]},"resources/dialogs/SelectRecipe.html":function(e,t){e.exports='<template>\n  <ux-dialog>\n    <ux-dialog-header>Select Recipe</ux-dialog-header>\n    <ux-dialog-body>\n      <icon-base\n        repeat.for="rec of recList"\n        item.bind="rec"\n        click.delegate="select(rec)"\n        class="${rec==selected ? \'selected\' : \'\'}"\n      ></icon-base>\n    </ux-dialog-body>\n    <ux-dialog-footer>\n      <button click.trigger="complete()">Done</button>\n    </ux-dialog-footer>\n  </ux-dialog>\n</template>\n'},"resources/dialogs/SelectX":function(e,t,o){"use strict";o.r(t),o.d(t,"SelectX",(function(){return i}));var n=o("aurelia-dialog"),c=o("+Aae"),i=function(){function e(e,t){this.selected=null,this.controller=e,this.mgrs=t}var t=e.prototype;return t.activate=function(e){this.list=e.list,this.type=e.type,this.custom=e.custom,this.selected=e.default},t.select=function(e){this.selected=e==this.selected?null:e},t.complete=function(){this.selected?this.custom?this.controller.ok({item:this.selected.id}):this.selected.icon||"icon"==this.type?this.controller.ok({item:this.selected}):this.controller.ok({item:this.selected.$_id}):this.controller.ok({})},e}();i.inject=[n.DialogController,c.a]},"resources/dialogs/SelectX.html":function(e,t){e.exports='<template>\n  <ux-dialog>\n    <ux-dialog-header>Select ${type}</ux-dialog-header>\n    <ux-dialog-body>\n      <div if.bind="custom && type==\'bus\'" class="container">\n        <div class="row">\n          <div\n            repeat.for="each of list"\n            click.delegate="select(each)"\n            class="${each.name==selected.name && \'selected\'} col"\n          >\n              ${each.name}\n              <icon-base item.bind="each" class="half"></icon-base>\n          </div>\n        </div>\n        <hr>\n        <div class="row">\n          <div class="col">\n            <p\n              if.bind="custom.showDefense"\n              click.delegate="select({custom: \'defense\', id: \'@defense\'})"\n              class="${selected.custom==\'defense\' && \'selected\'}"\n            >Defense</p>\n          </div>\n          <div class="col">\n            <p\n              if.bind="custom.showMarket"\n              click.delegate="select({custom: \'market\', id: \'@market\'})"\n              class="${selected.custom==\'market\' && \'selected\'}"\n            >Market</p>\n          </div>\n          <div class="col">\n            <p\n              if.bind="custom.showOffense"\n              click.delegate="select({custom: \'offense\', id: \'@offense\'})"\n              class="${selected.custom==\'offense\' && \'selected\'}"\n            >Offense</p>\n          </div>\n        </div>\n        <div class="row">\n          <div class="col"></div>\n          <div class="col"></div>\n          <div class="col">\n            <p\n              if.bind="custom.showDisconnect"\n              click.delegate="select({custom: \'disconnect\', id: \'@none\'})"\n              class="${selected.custom==\'disconnect\' && \'selected\'}"\n            >Disconnect</p>\n          </div>\n        </div>\n      </div>\n      <div if.bind="custom && type==\'building\'" class="container">\n        <div class="row">\n          <div\n            repeat.for="each of list"\n            click.delegate="select(each)"\n            class="${each.name==selected.name && \'selected\'} col"\n          >\n            <icon-base item.bind="each"></icon-base>\n          </div>\n        </div>\n        <div if.bind="selected" class="row">\n          ${selected.name}: space used ${selected.space}<br>\n          ${selected.categories}\n        </div>\n      </div>\n      <div if.bind="!custom && (list[0].icon || type==\'icon\')">\n        <icon-base\n          repeat.for="each of list"\n          item.bind="each"\n          click.delegate="select(each)"\n          class="${each==selected ? \'selected\' : \'\'}"\n        >${each.name}</icon-base>\n      </div>\n      <div if.bind="!custom && !list[0].icon && type!=\'icon\'">\n        <p  \n          repeat.for="each of list"\n          click.delegate="select(each)"\n          class="${each==selected ? \'selected\' : \'\'}"\n          >${each.name}</p>\n      </div>\n    </ux-dialog-body>\n    <ux-dialog-footer>\n      <button click.trigger="complete()">Close</button>\n    </ux-dialog-footer>\n  </ux-dialog>\n</template>\n'}}]);
//# sourceMappingURL=app~fba8b1df.4628470dbc2d9eeb09e6.bundle.map