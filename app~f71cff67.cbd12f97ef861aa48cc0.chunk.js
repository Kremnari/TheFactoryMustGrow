(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{app:function(e,n,i){"use strict";i.r(n),i.d(n,"App",(function(){return m}));var t,r=i("aurelia-templating-resources"),s=i("aurelia-framework"),a=i("8p7n"),o=i("uShe"),c=i("3Qvj");function l(e,n){var i;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(i=function(e,n){if(!e)return;if("string"==typeof e)return d(e,n);var i=Object.prototype.toString.call(e).slice(8,-1);"Object"===i&&e.constructor&&(i=e.constructor.name);if("Map"===i||"Set"===i)return Array.from(e);if("Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i))return d(e,n)}(e))||n&&e&&"number"==typeof e.length){i&&(e=i);var t=0;return function(){return t>=e.length?{done:!0}:{done:!1,value:e[t++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}return(i=e[Symbol.iterator]()).next.bind(i)}function d(e,n){(null==n||n>e.length)&&(n=e.length);for(var i=0,t=new Array(n);i<n;i++)t[i]=e[i];return t}function u(e,n,i,t,r,s,a){try{var o=e[s](a),c=o.value}catch(e){return void i(e)}o.done?n(c):Promise.resolve(c).then(t,r)}function h(e){return function(){var n=this,i=arguments;return new Promise((function(t,r){var s=e.apply(n,i);function a(e){u(s,t,r,a,o,"next",e)}function o(e){u(s,t,r,a,o,"throw",e)}a(void 0)}))}}function f(e,n){for(var i=0;i<n.length;i++){var t=n[i];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}var m=Object(s.c)(r.a,o.a,c.a)(t=function(){function e(e,n,i){var t=this;this.viewPane={main:"home",showingItem:null},this.dataBase={},this.rounder={ones:1,tens:0,huns:0,abs:!1,fail:!1,get val(){return 100*this.huns+10*this.tens+this.ones},calc_val:function(e){return Math.min(this.val,e)},calc:function(e,n,i){return Math.min(this.val,Math.min(i,n-e))}},this.viewRecCat=!1,this.tooltip=null,window.tfmg=this,this.signaler=e,n.onLoadComplete((function(e){t.init(e,i)})),n.beginLoad(),this.saveGame=n.saveGame}var n,i,t,r=e.prototype;return r.init=function(){var e=h(regeneratorRuntime.mark((function e(n,i){var t,r,s;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(this.mgrs=n.mgrs,this.mgrs.DS=i,this.mgrs.baseApp=this,this.mgrs.signaler=this.signaler,this.mgrs.rounder=this.rounder,n.save)if("0.01"==n.save.version)for(this.player=a.b.deserialize(this.mgrs,n.save.player),this.facBlocks=[],t=l(n.save.facBlocks);!(r=t()).done;)s=r.value,this.facBlocks.push(a.a.deserialize(this.mgrs,s));else console.log("idb save data out of date"),this.facBlocks=[],this.player=new a.b(10,this.mgrs,!0),this.jumpStart(),this.save();else this.facBlocks=[],this.player=new a.b(10,this.mgrs,!0),this.jumpStart();return e.next=8,this.mgrs.idb.get("dev");case 8:this.showDev=e.sent,this.mgrs.rec.set_player(this.player),this.mgrs.rec.sub_ticker(this.mgrs.Ticker),this.select_FacBlock(this.player,!0);case 12:case"end":return e.stop()}}),e,this)})));return function(n,i){return e.apply(this,arguments)}}(),r.vrcToggle=function(e){this.viewRecCat=this.viewRecCat!=e&&e},r.resetSave=function(){this.saveGame()},r.showing=function(e,n){var i=this;this.viewPane.showingItem&&(this.viewPane.showingItem.selectedClass="");var t=this.viewPane.showingItem;this.viewPane.showingItem=null,this.viewPane.showingCat="",e&&t!=e&&window.setTimeout((function(){e.selectedClass="selected",i.viewPane.showingItem=e,i.viewPane.showingCat=n}),0)},r.add_FacBlock=function(e,n){if(!(n=n||prompt("Enter Block Name")))return!1;var i=new a.a(e,n);return this.facBlocks.push(i),i},r.select_FacBlock=function(e,n){void 0===n&&(n=!1),this.showItem=null,this.viewPane.facBlock=e,this.viewPlayer=n},r.save=function(){var e=h(regeneratorRuntime.mark((function e(){var n,i,t,r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:for(n={player:{}},console.log("saving..."),n.version="0.01",n.techs=this.mgrs.tech.serialize(),n.player=this.player.serialize(),n.facBlocks=[],i=l(this.facBlocks);!(t=i()).done;)r=t.value,n.facBlocks.push(r.serialize());this.saveGame(n),console.log("...done");case 9:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),r.jumpStart=function(){this.player.inv.add("burner-mining-drill",2),this.player.inv.add("assembling-machine-1",2),this.player.inv.add("lab",2),this.player.inv.add("automation-science-pack",200)},r.testing=function(){this.add_FacBlock("bus","resource"),this.add_FacBlock("resource","iron-mine"),this.add_FacBlock("resource","copper-mine"),this.facBlocks[1].lines[0].AddEntity("burner-mining-drill"),this.facBlocks[1].lines[0].AddEntity("burner-mining-drill"),this.facBlocks[1].lines[0].SetEntityFn(this.mgrs.res.resList["iron-ore"]),this.facBlocks[2].lines[0].AddEntity("burner-mining-drill"),this.facBlocks[2].lines[0].AddEntity("burner-mining-drill"),this.facBlocks[2].lines[0].SetEntityFn(this.mgrs.res.resList["copper-ore"]),this.add_FacBlock("factory","iron-plates"),this.facBlocks[1].AddBusDrain(this.facBlocks[3]),this.facBlocks[3].lines[0].AddEntity("stone-furnace"),this.facBlocks[3].lines[0].AddEntity("stone-furnace"),this.facBlocks[3].lines[0].SetEntityFn(this.mgrs.rec.recipeList["iron-plate"]),this.add_FacBlock("factory","copper-plates"),this.facBlocks[2].AddBusDrain(this.facBlocks[4]),this.facBlocks[4].lines[0].AddEntity("stone-furnace"),this.facBlocks[4].lines[0].AddEntity("stone-furnace"),this.facBlocks[4].lines[0].SetEntityFn(this.mgrs.rec.recipeList["copper-plate"])},r.iconEditor=function(){var e=h(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if("iconEditor"!=this.viewPane){e.next=3;break}return this.viewPane={main:"home",showingItem:null},e.abrupt("return");case 3:return this.viewPane="iconEditor",this.IE={ds:{old:{},new:{}},select:{}},e.next=7,this.mgrs.idb.get("Icons");case 7:if(e.t0=e.sent,e.t0){e.next=12;break}return e.next=11,this.mgrs.idb.get("dataSet");case 11:e.t0=e.sent.icons;case 12:return this.IE.ds.new=e.t0,e.next=15,this.mgrs.idb.get("oldIcons");case 15:if(this.IE.ds.old=e.sent,e.t1=this.IE.ds.old,e.t1){e.next=23;break}return e.next=20,this.mgrs.idb.set("oldIcons",this.IE.ds.new);case 20:if(e.t2=e.sent,!e.t2){e.next=23;break}this.IE.ds.old=this.IE.ds.new;case 23:this.signaler.signal("update");case 24:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),r.IEshow=function(){this.IE.showOld=this.IE.ds.old[this.IE.select.Cat][this.IE.select.Icon],this.IE.showNew=this.IE.ds.new[this.IE.select.Cat][this.IE.select.Icon],this.signaler.signal("update")},r.IEfiled=function(){var e=h(regeneratorRuntime.mark((function e(){var n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=function(){var e=h(regeneratorRuntime.mark((function e(n){var i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return i=new FileReader,e.abrupt("return",new Promise((function(e){i.onload=function(){e(i.result)},i.readAsDataURL(n)})));case 2:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}(),e.next=3,n(this.IE.file[0]);case 3:this.IE.fileBlob=e.sent;case 4:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),r.IEStore=function(){this.IE.ds.new[this.IE.select.Cat][this.IE.select.Icon]=this.IE.fileBlob},r.saveIconEditor=function(){var e=h(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.mgrs.idb.set("Icons",this.IE.ds.new);case 2:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),r.dlIconEditor=function(){var e=document.createElement("a");e.download="icons.json",e.href="data:application/octet-stream:base64,"+JSON.stringify(this.IE.ds.new),e.style="display:none",document.body.appendChild(e),e.click()},r.ulIconEditor=function(){var e=h(regeneratorRuntime.mark((function e(){var n,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(this.IE.upload){e.next=2;break}return e.abrupt("return");case 2:return n=function(){var e=h(regeneratorRuntime.mark((function e(n){var i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return i=new FileReader,e.abrupt("return",new Promise((function(e){i.onload=function(){e(i.result)},i.readAsText(n)})));case 2:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}(),e.t0=JSON,e.next=6,n(this.IE.upload[0]);case 6:e.t1=e.sent,i=e.t0.parse.call(e.t0,e.t1),this.mgrs.idb.set("Icons",i),console.log("loaded");case 10:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),n=e,(i=[{key:"showItem",set:function(e){var n=this;this.viewPane.showingItem&&(this.viewPane.showingItem.selectedClass="");var i=this.viewPane.showingItem;this.viewPane.showingItem=null,this.viewPane.showingCat="",e&&i!=e.item&&window.setTimeout((function(){e.item.selectedClass="selected",n.viewPane.showingItem=e.item,n.viewPane.showingCat=e.cat}),0)}}])&&f(n.prototype,i),t&&f(n,t),e}())||t},"app.html":function(e,n,i){e.exports='<template>\n  <require from="bootstrap/dist/css/bootstrap.min.css"></require>\n  <require from="@fortawesome/fontawesome-free/css/all.min.css"></require>\n  <require from="./styles.scss"></require>\n  <require from="./tfmg.css"></require>\n\n  <require from="resources/elements/icon-base"></require>\n  <require from="resources/elements/tool-tip"></require>\n  <require from="resources/value-converters/lib/ObjectFilters"></require>\n  <require from="resources/value-converters/CanMine"></require>\n  <require from="resources/value-converters/isVisible"></require>\n  <require from="resources/value-converters/valueconverters"></require>\n\n  <header id="selector">\n    <div id="devControls" if.bind="showDev">\n      <button click.delegate="save()">Save</button>\n      <button click.delegate="resetSave()">Start Anew</button>\n      <button click.delegate="mgrs.Ticker.once()">Tick 1</button>\n      <button click.delegate="mgrs.Ticker.toggle()">${mgrs.Ticker.isRunning ? "Pause" : "Resume"}</button>\n      <button click.delegate="testing()">Testing...</button>\n      <button click.delegate="iconEditor()">Edit Icons</button>\n    </div>\n    <div id="playerControls">\n      <h4 click.delegate="viewPane.main = \'home\'">Home</h4>\n      <h4 click.delegate="viewPane.main = \'entities\'">Machina</h4>\n      <h4 click.delegate="viewPane.main = \'facBlocks\'">Blocks</h4>\n      <h4 click.delegate="viewPane.main = \'research\'">Research</h4>\n    </div>\n    <div id="facBlockControls" if.bind="!viewPane.facBlock.isPlayer" show.bind="viewPane.facBlock">\n      <div show.bind="viewPane.main == \'entities\'">\n        <h5 click.delegate="viewPane.entityPane = \'mining\'">Mining</h5>\n        <h5 click.delegate="viewPane.entityPane = \'manuf\'">Manufacturing</h5>\n        <h5 click.delegate="viewPane.entityPane = \'labs\'">Labs</h5>\n      </div>\n    </div>\n    <tool-tip display.bind="tooltip" item-mgr.bind="mgrs.item" recipe-mgr.bind="mgrs.rec"></tool-tip>\n  </header>\n  <div id="mainView" if.bind="viewPane!=\'iconEditor\'">\n    <article class="leftside">\n      <section id="recipes" show.bind="viewPane.main == \'home\'">\n        <h3>Crafting categories</h3>\n        <div>\n          <h4>Hand Craft</h4>\n          <icon-base repeat.for="rec of mgrs.rec.recipes_by_cats[\'crafting\']  | objectValues " item.bind="rec" click.delegate="mgrs.rec.startCraft(rec, player.inv, \' \')"\n          show.bind="rec.enabled" class.bind="rec.classesStr" anim_class.bind="rec.style" mouseenter.trigger="tooltip = rec" mouseleave.trigger="tooltip = null"></icon-base>\n        </div>\n      </section>\n      <section id="resources" show.bind="viewPane.main == \'home\'">\n        <h3>Mineables</h3>\n        <icon-base repeat.for="res of mgrs.res.resList | canMine | objectValues" item.bind="res" click.delegate="mgrs.res.mine(res.name, player.inv)"\n                  class="${res.mining ? \'mining\': null}" anim_style.bind="res.miningStyle"></icon-base> \n      </section>\n      <section id="technologies"  show.bind="viewPane.main == \'research\'">\n        <h3>Research</h3>\n        <require from="./resources/elements/byModule/tech-infopane.html"></require>\n        <tech-infopane if.bind="viewPane.showingCat==\'tech\'" tech.bind="viewPane.showingItem" tech-mgr.bind="mgrs.tech" tooltip.bind="tooltip"></tech-infopane>\n        <icon-base repeat.for="tech of mgrs.tech.shownTechs & signal:\'techUpdate\'" click.delegate="showItem = {item: tech, cat: \'tech\'}"\n                    item.bind="tech" count.bind="tech.prerequisites.length"\n                    class="${mgrs.tech.researching==tech ? \'researching\' : \'\'} ${tech.researched ? \'researched\': \'\'} ${viewPane.showingItem==tech ? \'selected\': \'\'}"\n        >\n        </icon-base>\n        <div>\n          <h5>Filters</h5>\n          <p>Filter Complete<button click.delegate="mgrs.tech.toggleFilter(\'complete\')">${mgrs.tech.filters.ShowComplete? "Hide":"Show"}</button></p>\n          <p>Filter Pack:\n            <span repeat.for="pack of mgrs.tech.filters.ShowPack | objectEntries & signal:\'techUpdate\'"\n              class="${pack[1]? \'selected\':\'\'}" click.delegate="mgrs.tech.toggleFilter(\'byPack\', pack[0])"\n              >\n              <img src.bind="mgrs.icon.getSrc(\'item\', pack[0])" height="16px">\n            </span>\n          </p>\n        </div>\n      </section>\n      <section id="facBlocks" show.bind="viewPane.main == \'facBlocks\'">\n        <h3>Factory Blocks</h3>\n        <div click.delegate="select_FacBlock(player, true)" class=\'${viewPane.facBlock==player ? "selected":""}\'>player</div>\n        <div repeat.for="facBlock of facBlocks" click.delegate="select_FacBlock(facBlock)" class=\'${viewPane.facBlock==facBlock ? "selected":""}\'>\n          ${facBlock.name}:${facBlock.type}\n        </div>\n        <div>\n          <span class="button" click.delegate="add_FacBlock(\'factory\')">Add Factory Block</span>\n          <span class="button" click.delegate="add_FacBlock(\'bus\')">Add Bus Block</span>\n          <span class="button" click.delegate="add_FacBlock(\'resource\')">Add Resource Block</span>\n          <span class="button" click.delegate="add_FacBlock(\'research\')">Add Lab Block</span>\n        </div>\n      </section>\n      <section id="machines" if.bind="viewPane.main == \'entities\' && viewPlayer">\n        <div show.bind="viewPane.entityPane == \'mining\'">\n          <h4>Mining</h4>\n          <require from="./resources/elements/byModule/mining-infopane.html"></require>\n          <mining-infopane if.bind="viewPane.showingCat==\'miner\'" miner.bind="viewPane.showingItem" actor.bind="player" res-mgr.bind="mgrs.res" rounder.bind="rounder"></mining-infopane>\n          <div class="entityList">\n            <icon-base repeat.for="miner of viewPane.facBlock.getEntities(\'mining\') & signal:\'addedEntity\'" item.bind="miner" alt-image.bind="miner.mining.icon"\n                      click.delegate="showing(miner, \'miner\')" class.bind="miner.selectedClass"></icon-base>\n          </div>\n        </div>\n        <div show.bind="viewPane.entityPane == \'manuf\'">\n          <h4>Manufacturing</h4>\n          <require from="./resources/elements/byModule/crafting-infopane.html"></require>\n          <crafting-infopane if.bind="viewPane.showingCat==\'crafter\'" crafter.bind="viewPane.showingItem" rec-mgr.bind="mgrs.rec" item-mgr.bind="mgrs.item" actor.bind="player" inventory.bind="viewPane.facBlock.inv" rounder.bind="rounder"></crafting-infopane>\n          <div class="entityList">\n            <icon-base\n              repeat.for="crafter of viewPane.facBlock.getEntities(\'crafting\') & signal:\'addedEntity\'"\n              item.bind="crafter"\n              alt-image.bind="crafter.recipe.icon"\n              click.delegate="showing(crafter, \'crafter\')"\n              class.bind="crafter.selectedClass"\n            ></icon-base>\n          </div>\n        </div>\n        <div show.bind="viewPane.entityPane == \'labs\'">\n          <h4>Labs</h4>\n          <require from="./resources/elements/byModule/lab-infopane.html"></require>\n          <lab-infopane if.bind="viewPane.showingCat==\'labs\'" lab.bind="viewPane.showingItem" item-mgr.bind="mgrs.item" rounder.bind="rounder"></lab-infopane>\n          <div class="entityList">\n            <icon-base repeat.for="labee of viewPane.facBlock.getEntities(\'lab\') & signal:\'addedEntity\'" item.bind="labee" click.delegate="showing(labee, \'labs\')" class.bind="labee.selectedClass"></icon-base>\n          </div>\n        </div>\n      </section>\n      <section if.bind="viewPane.main == \'entities\' && !viewPlayer">\n        <require from="resources/elements/factoryBlocks/transportLine.html" as="transport-line"></require>\n        <require from="resources/elements/factoryBlocks/entityLine" as="entity-line"></require>\n        ${viewPane.facBlock.name}\n        <div if.bind="viewPane.facBlock.inputLine">\n          <span click.delegate="viewPane.facBlock.SelectBusFeed()">Set Feed</span>\n          <span if.bind="viewPane.facBlock.feeds[0]">Feed From: ${viewPane.facBlock.feeds[0].name}</span>\n        </div>\n        <transport-line\n          if.bind="viewPane.facBlock.inputLine"\n          line.bind="viewPane.facBlock.inputLine"\n          type="input"\n        ></transport-line>\n        <div repeat.for="line of viewPane.facBlock.lines">\n          <transport-line\n            if.bind="line.constructor.name==\'Inventory\'"\n            line.bind="line"\n            type="internal"\n          ></transport-line>\n          <entity-line\n            if.bind="line.constructor.name==\'EntityStorage\'"\n            line.bind="line"\n          ></entity-line>\n        </div>\n        <transport-line\n          if.bind="viewPane.facBlock.outputLine"\n          line.bind="viewPane.facBlock.outputLine"\n          type="output"\n        ></transport-line>\n        <div if.bind="viewPane.facBlock.outputLine">\n          <span click.delegate="viewPane.facBlock.SelectBusDrain()">SetDrain</span>\n          <span if.bind="viewPane.facBlock.drains[0]">Drains From: ${viewPane.facBlock.drains[0].name}</span>\n        </div>\n      </section>\n    </article>\n    <article class="rightside">\n      <section id="inventoryList" if.bind="!viewPane.facBlock.isPlayer">\n        <h3>Inventory</h3>\n        <icon-base\n          repeat.for="item of viewPane.facBlock.inv.items & signal:\'generalUpdate\'"\n          item.bind="item"\n          count.bind="item.count"\n          click.delegate="viewPane.facBlock.inv.click({where:viewPane.facBlock, which:item, who:player, what:\'move\', rounder})"\n        ></icon-base>\n      </section>\n    </article>\n  </div>\n  <div id="iconEditor" if.bind="viewPane==\'iconEditor\'">\n    <select value.bind="IE.select.Cat">\n      <option repeat.for="cat of IE.ds.old | objectKeys & signal:\'update\'" model.bind="cat">${cat}</option>\n    </select>\n    <select value.bind="IE.select.Icon">\n      <option repeat.for="icon of IE.ds.old[IE.select.Cat] | objectKeys & signal:\'update\'" model.bind="icon">${icon}</option>\n    </select>\n    <button click.delegate="IEshow()">Show</button><br>\n    <figcaption class="inline">Old</figcaption>\n    <img src.bind="IE.showOld & signal:\'update\'" height="64px" width="64px"/>\n    <img src.bind="IE.showNew & signal:\'update\'" height="64px" width="64px"/>\n    <figcaption class="inline">New</figcaption><br>\n    <input type="file" files.bind="IE.file" accept="image/*" change.delegate="IEfiled()">Select replace</input>\n    <img src.bind="IE.fileBlob"></img><br>\n    <button click.delegate="IEStore()">Store</button>\n    <button click.delegate="saveIconEditor()">SaveDB</button><br>\n    <button click.delegate="dlIconEditor()">Download</button>\n    <input type="file" name="name" files.bind="IE.upload" style="display:none" id="IconFileSelect" accept=".json" change.delegate="ulIconEditor()">\n    <button onclick="document.getElementById(\'IconFileSelect\').click();">Upload</button>\n  </div>\n  <section id="inventoryList">\n    <h3>Inventory</h3>\n    <icon-base\n      repeat.for="item of player.inv.items & signal:\'generalUpdate\'"\n      item.bind="item"\n      show.bind="item.count>0 || item.filtered"\n      count.bind="item.count"\n      click.delegate="player.inv.click({where:viewPane.facBlock, which:item, who:player, what:\'use\'})"\n    ></icon-base>\n  </section>\n  <section id="numSelectors">\n    <input type="checkbox" id="numSelToggle" style="display:none">\n    <label for="numSelToggle">Rounder&nbsp<span class="tabOnly">${rounder.huns}${rounder.tens}${rounder.ones}</span>\n    </label>\n    <input id="huns" type="range" min="0" max="9" step="1" value.bind="rounder.huns">\n    <input id="tens" type="range" min="0" max="9" step="1" value.bind="rounder.tens">\n    <input id="ones" type="range" min="0" max="9" step="1" value.bind="rounder.ones">\n    <span>${rounder.huns}${rounder.tens}${rounder.ones}</span>\n    <label class="switch"><input type="checkbox" value.bind="rounder.abs"><span class="slider text_abs_mod"></span></label>\n    <label class="switch"><input type="checkbox" value.bind="rounder.fail"><span class="slider text_full_part"></span></label>\n  </section>\n\n</template>\n'},wb4v:function(e,n,i){"use strict"}}]);
//# sourceMappingURL=app~f71cff67.cbd12f97ef861aa48cc0.bundle.map